We are using Nodejs, Expressjs, Redis stack to build a real time node web application, GIT is used to manage the code version.
Some prerequisite tools are needed on your development machine.

- The following steps are specifically for Mac OS, if you are not using Mac OS, please install node.js, mongodb, git by asking google.

1. Homebrew
Homebrew is the package management tool on OSX to help installing other tools
$ ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
-- after installation done, update it
$ brew update

2. Node.js and npm
Node.js is a runtime environment for server-side and networking applications.
Npm is package manager. Installs, publishes and manages node programs.
$ brew install node
-- verify node.js is working:
make a new file hello_node.js:
var http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello Node.js\n');
}).listen(8124, "127.0.0.1");
console.log('Server running at http://127.0.0.1:8124/');

$ node hello_node.js
$ Server running at http://127.0.0.1:8124/

-- verify npm is installed
$ npm -v
2.5.1
3. GIT
$ brew install git
-- verify git is installed
$ git --version
git version 1.9.5 (Apple Git-50.3)

4. Redis
Our real time web application is useing Redis.
$ npm install redis --save
Use following command to start your redis database server.
$ redis-server

               _._
           _.-``__ ''-._
      _.-``    `.  `_.  ''-._           Redis 2.6.9 (00000000/0) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._
 (    '      ,       .-`  | `,    )     Running in stand alone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 50763
  `-._    `-._  `-./  _.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |           http://redis.io
  `-._    `-._`-.__.-'_.-'    _.-'
 |`-._`-._    `-.__.-'    _.-'_.-'|
 |    `-._`-._        _.-'_.-'    |
  `-._    `-._`-.__.-'_.-'    _.-'
      `-._    `-.__.-'    _.-'
          `-._        _.-'
              `-.__.-'

Setup development environment on your machine

Step 1: Use the Terminal to create a workspace on your machine, for example, create a folder named “Real_time_App”.
Step 2: Go into the “Real_time_App” folder, install code.

Deploy Server Side Code
Initial your local server-side code from server with https
$ git clone  https://github.com/EricZhangGeek/NotificationChat.git
After finished. Create local dev branch.
$ git fetch && git checkout dev
Now we need to install dependency packages. Go into “nodeChat”.
$ npm install

Run the backend service:
Run Redis server (database is required to run the backend service):
$ redis-server

Then go into “nodeChat”, start the service by
$ node app.js
Go to your browser http://localhost:3000
You should see out index page

Note: each time you have some changes in the code, you need to stop the node.js application and re-run $ npm start  to apply the changes.




